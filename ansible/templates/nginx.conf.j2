user www-data;
worker_processes auto;
pid /run/nginx.pid;

events { worker_connections 1024; }

http {
  map $active_color $active_upstream {
    default app_blue;
    "blue"  app_blue;
    "green" app_green;
  }

  # Basic hardening
  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  keepalive_timeout 65;
  types_hash_max_size 4096;
  server_tokens off;

  # Trusted Cloudflare IP ranges
  include /etc/nginx/conf.d/cf_ips.conf;

  real_ip_header CF-Connecting-IP;
  real_ip_recursive on;

  upstream app_blue {
    least_conn;
    {% for s in blue_upstreams %}
    server {{ s.host }}:{{ s.port }} max_fails=3 fail_timeout=10s;
    {% endfor %}
  }

  upstream app_green {
    least_conn;
    {% for s in green_upstreams %}
    server {{ s.host }}:{{ s.port }} max_fails=3 fail_timeout=10s;
    {% endfor %}
  }

  # Redirect HTTP â†’ HTTPS
  server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name {{ server_name }};
    return 301 https://$host$request_uri;
  }

  # HTTPS with Cloudflare
  server {
    include /etc/nginx/conf.d/active_color.conf;

    http2 on;
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name {{ server_name }};

    ssl_certificate     {{ ssl_cert_path }};
    ssl_certificate_key {{ ssl_key_path }};
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    location / {
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;

      proxy_pass http://$active_upstream;
    }

    # Health endpoint
    location = /edge-health {
      return 200 "ok\n";
      add_header Content-Type text/plain;
    }
  }

  map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
  }
}
